name: 'dotnet sample payment project'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_NAME: 'dotnet-payment-app'
      JFROG_BUILD_STATUS: PASS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_PASSWORD: ${{ secrets.JF_PASSWORD }}
          JF_USER: ${{ secrets.JF_USER }}

      - name: Configure Artifactory / NuGet
        run: |
          jf rt ping
          jf dotnet-config --repo-resolve=alpha-nuget-virtual

      - name: "Curation: audit (continue on error)"
        continue-on-error: true
        run: |
          jf ca --format=table --threads=4

      - name: Security Audit
        run: |
          jf audit

      - name: Restore dependencies (via JFrog)
        run: |
          jf dotnet restore --build-name=${{ env.BUILD_NAME }} --build-number=${{ github.run_number }}

      - name: Build
        run: |
          dotnet build ./sample-dotnet-project.csproj --configuration Release --no-restore

      - name: Pack (create nupkg in ./nupkg)
        run: |
          mkdir -p ./nupkg
          dotnet pack ./sample-dotnet-project.csproj --configuration Release -o ./nupkg --no-build

      - name: Publish NuGet package to Artifactory
        run: |
          echo "nupkg contents:" && ls -la ./nupkg || true
          jf rt u "./nupkg/*.nupkg" alpha-nuget-virtual/${{ env.BUILD_NAME }}/${{ github.run_number }}/ --module=sample-dotnet-project

      - name: Publish build-info to Artifactory
        run: |
          jf rt bce ${{ env.BUILD_NAME }} ${{ github.run_number }}
          jf rt bag ${{ env.BUILD_NAME }} ${{ github.run_number }}
          jf rt bp ${{ env.BUILD_NAME }} ${{ github.run_number }}

      - name: Build scan (Xray)
        run: |
          jf rt bs ${{ env.BUILD_NAME }} ${{ github.run_number }}

